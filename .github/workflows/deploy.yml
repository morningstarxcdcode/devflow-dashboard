name: Deploy DevFlow to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint --if-present

    - name: Run tests
      run: npm test --if-present

    - name: Build project
      run: npm run build --if-present

    - name: Setup Pages
      uses: actions/configure-pages@v5

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: '.'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  lighthouse:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.event_name == 'push'

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Wait for deployment
      run: sleep 30

    - name: Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        urls: |
          ${{ needs.deploy.outputs.page_url }}
        uploadArtifacts: true
        temporaryPublicStorage: true

    - name: Comment PR with Lighthouse results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const results = require('./lhci_reports/manifest.json');
          const summary = results[0].summary;

          const comment = `## âš¡ Lighthouse Report

          | Category | Score |
          |----------|-------|
          | Performance | ${Math.round(summary.performance * 100)}% |
          | Accessibility | ${Math.round(summary.accessibility * 100)}% |
          | Best Practices | ${Math.round(summary['best-practices'] * 100)}% |
          | SEO | ${Math.round(summary.seo * 100)}% |
          | PWA | ${Math.round(summary.pwa * 100)}% |

          [View full report](${summary.reportUrl})`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
